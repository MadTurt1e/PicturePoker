// this is where the file is located
package game.jdbc.picturepoker;

// this is effectively the C include thing
import game.jdbc.picturepoker.util.DataTransferObject;

public class Player implements DataTransferObject {
    //Special player ID - not used in the sample code
    private int p_ID;
    private String p_name;
    private String passcode;
    private int dollars;

    // Per player game statistics
    private int first_places;
    private int second_places;
    private int third_places;
    private int fourth_places;
    private int lifetime_tokens;

    //Per game info - Zeroed out, and refreshed upon each new game
    private int tokens;
    private int bet;
    private int rounds_won;

    //Autogenerated getters and setters


    @Override
    public int getID() {
        return p_ID;
    }

    public void setID(int playerID) {
        this.p_ID = p_ID;
    }

    // Getters and Setters
    public String getPlayerName() {
        return p_name;
    }

    public void setPlayerName(String name) {
        this.p_name = name;
    }

    public String getPasscode() {
        return passcode;
    }

    public void setPasscode(String passcode) {
        this.passcode = passcode;
    }

    public int getFirstPlaces() {
        return first_places;
    }

    public void setFirstPlaces(int first_places) {
        this.first_places = first_places;
    }

    public int getSecondPlaces() {
        return second_places;
    }

    public void setSecondPlaces(int seconds) {
        this.second_places = second_places;
    }

    public int getThirdPlaces() {
        return third_places;
    }

    public void setThirdPlaces(int thirdPlaces) {
        this.third_places = thirdPlaces;
    }

    public int getFourthPlaces() {
        return fourth_places;
    }

    public void setFourthPlaces(int fourth_places) {
        this.fourth_places = fourth_places;
    }

    public int getLifetimeTokens(){
        return lifetime_tokens;
    }

    public void setLifetimeTokens(int lifetime_tokens){
        this.lifetime_tokens = lifetime_tokens;
    }

    public int getDollars() {
        return dollars;
    }

    public void setDollars(int dollars) {
        this.dollars = dollars;
    }

    public int getTokens() {
        return tokens;
    }

    public void setTokens(int tokens) {
        this.tokens = tokens;
    }

    public int getBet() {
        return bet;
    }

    public void setBet(int bet) {
        this.bet = bet;
    }

    public int getRoundsWon() {
        return rounds_won;
    }

    public void setRoundsWon(int rounds_won) {
        this.rounds_won = rounds_won;
    }

    // Game functions
    public void raise(){
        bet = getBet();
        if(bet >= 5 || getTokens() < 1){
            // Invalid bet, do not raise
            System.out.println("Player: Could not raise- Bet already max or no more tokens");
        }
        else{
            setBet(bet + 1);
            setTokens(getTokens() - 1);
        }
    }

    // Statistic aggregation functions
    public int getGamesPlayed(){
        return getFirstPlaces() + getSecondPlaces() + getThirdPlaces() + getFourthPlaces();
    }

    public int getAvgLifetimeTokens(){
        return (double)getLifetimeTokens()/getGamesPlayed();
    }

    //ToString thing

    @Override
    public String toString() {
        return "Player{" +
                "p_ID=" + p_ID +
                ", name='" + name + '\'' +
                ", passcode='" + passcode + '\'' +
                ", dollars=" + dollars +
                ", first_places=" + first_places +
                ", second_places=" + second_places +
                ", third_places=" + third_places +
                ", fourth_places=" + fourth_places +
                ", lifetime_tokens=" + lifetime_tokens +
                ", tokens=" + tokens +
                ", bet=" + bet +
                ", rounds_won=" + rounds_won +
                '}';
    }
}